{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2025\\\\March\\\\BHT_Sravanth_t6565 (Music)\\\\music-player\\\\frontend\\\\src\\\\components\\\\MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  currentTrack,\n  onTrackEnd,\n  audioRef,\n  setIsPlaying\n}) => {\n  _s();\n  const [isLocalPlaying, setLocalPlaying] = useState(false);\n  const internalRef = useRef(null); // fallback if no external ref\n  const playerRef = audioRef || internalRef;\n\n  // Handle track change\n  useEffect(() => {\n    if (currentTrack && playerRef.current) {\n      playerRef.current.src = currentTrack.s3_url;\n      playerRef.current.load();\n      const playPromise = playerRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setLocalPlaying(true);\n          setIsPlaying && setIsPlaying(true);\n        }).catch(error => {\n          console.error(\"Auto-play failed:\", error);\n        });\n      }\n    }\n  }, [currentTrack]);\n\n  // Track ended event\n  useEffect(() => {\n    const audio = playerRef.current;\n    if (!audio) return;\n    const handleEnded = () => {\n      setLocalPlaying(false);\n      setIsPlaying && setIsPlaying(false);\n      onTrackEnd && onTrackEnd();\n    };\n    audio.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audio.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [onTrackEnd]);\n\n  // Play / Pause toggle\n  const togglePlayPause = () => {\n    if (!currentTrack || !playerRef.current) return;\n    if (isLocalPlaying) {\n      playerRef.current.pause();\n    } else {\n      playerRef.current.play().catch(err => console.error(\"Play failed:\", err));\n    }\n    setLocalPlaying(!isLocalPlaying);\n    setIsPlaying && setIsPlaying(!isLocalPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: playerRef,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"20px\",\n        color: \"#333\"\n      },\n      children: [\"Now Playing: \", currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px\",\n        backgroundColor: \"#4db8ff\",\n        color: \"white\",\n        padding: \"8px 16px\",\n        border: \"none\",\n        fontSize: \"14px\",\n        borderRadius: \"6px\",\n        cursor: \"pointer\"\n      },\n      onClick: togglePlayPause,\n      disabled: !currentTrack,\n      children: isLocalPlaying ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"aL7/eTaK6w+riMYPyUnJTCDXtds=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MusicPlayer","currentTrack","onTrackEnd","audioRef","setIsPlaying","_s","isLocalPlaying","setLocalPlaying","internalRef","playerRef","current","src","s3_url","load","playPromise","play","undefined","then","catch","error","console","audio","handleEnded","addEventListener","removeEventListener","togglePlayPause","pause","err","className","children","ref","hidden","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","color","title","artist","backgroundColor","padding","border","fontSize","borderRadius","cursor","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/2025/March/BHT_Sravanth_t6565 (Music)/music-player/frontend/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst MusicPlayer = ({ currentTrack, onTrackEnd, audioRef, setIsPlaying }) => {\r\n  const [isLocalPlaying, setLocalPlaying] = useState(false);\r\n  const internalRef = useRef(null); // fallback if no external ref\r\n  const playerRef = audioRef || internalRef;\r\n\r\n  // Handle track change\r\n  useEffect(() => {\r\n    if (currentTrack && playerRef.current) {\r\n      playerRef.current.src = currentTrack.s3_url;\r\n      playerRef.current.load();\r\n\r\n      const playPromise = playerRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(() => {\r\n            setLocalPlaying(true);\r\n            setIsPlaying && setIsPlaying(true);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Auto-play failed:\", error);\r\n          });\r\n      }\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  // Track ended event\r\n  useEffect(() => {\r\n    const audio = playerRef.current;\r\n    if (!audio) return;\r\n\r\n    const handleEnded = () => {\r\n      setLocalPlaying(false);\r\n      setIsPlaying && setIsPlaying(false);\r\n      onTrackEnd && onTrackEnd();\r\n    };\r\n\r\n    audio.addEventListener(\"ended\", handleEnded);\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [onTrackEnd]);\r\n\r\n  // Play / Pause toggle\r\n  const togglePlayPause = () => {\r\n    if (!currentTrack || !playerRef.current) return;\r\n\r\n    if (isLocalPlaying) {\r\n      playerRef.current.pause();\r\n    } else {\r\n      playerRef.current.play().catch((err) => console.error(\"Play failed:\", err));\r\n    }\r\n\r\n    setLocalPlaying(!isLocalPlaying);\r\n    setIsPlaying && setIsPlaying(!isLocalPlaying);\r\n  };\r\n\r\n  return (\r\n    <div className=\"music-player\">\r\n      <audio ref={playerRef} hidden />\r\n      <h2 style={{ marginTop: \"20px\", color: \"#333\" }}>\r\n        Now Playing: {currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"}\r\n      </h2>\r\n      <button\r\n        style={{\r\n          marginTop: \"10px\",\r\n          backgroundColor: \"#4db8ff\",\r\n          color: \"white\",\r\n          padding: \"8px 16px\",\r\n          border: \"none\",\r\n          fontSize: \"14px\",\r\n          borderRadius: \"6px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n        onClick={togglePlayPause}\r\n        disabled={!currentTrack}\r\n      >\r\n        {isLocalPlaying ? \"Pause\" : \"Play\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}