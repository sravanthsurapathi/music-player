{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2025\\\\March\\\\BHT_Sravanth_t6565 (Music)\\\\music-player\\\\frontend\\\\src\\\\components\\\\MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  currentTrack,\n  onTrackEnd\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(new Audio());\n\n  // Handle track change\n  useEffect(() => {\n    if (currentTrack) {\n      audioRef.current.src = currentTrack.s3_url;\n      audioRef.current.load();\n      if (isPlaying) {\n        const playPromise = audioRef.current.play();\n        if (playPromise !== undefined) {\n          playPromise.catch(error => {\n            console.error(\"Auto-play failed:\", error);\n          });\n        }\n      }\n    }\n  }, [currentTrack]);\n\n  // Handle play/pause button\n  const togglePlayPause = () => {\n    if (!currentTrack) return;\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n          console.error(\"Play failed:\", error);\n        });\n      }\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Track ended handler\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n      if (onTrackEnd) onTrackEnd();\n    };\n    const audio = audioRef.current;\n    audio.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audio.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [onTrackEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Now Playing: \", currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      disabled: !currentTrack,\n      children: isPlaying ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"Z834BG9QJWUuNeX5y/f+e25ExkA=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MusicPlayer","currentTrack","onTrackEnd","_s","isPlaying","setIsPlaying","audioRef","Audio","current","src","s3_url","load","playPromise","play","undefined","catch","error","console","togglePlayPause","pause","handleEnded","audio","addEventListener","removeEventListener","className","children","title","artist","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/2025/March/BHT_Sravanth_t6565 (Music)/music-player/frontend/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst MusicPlayer = ({ currentTrack, onTrackEnd }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef = useRef(new Audio());\r\n\r\n  // Handle track change\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      audioRef.current.src = currentTrack.s3_url;\r\n      audioRef.current.load();\r\n\r\n      if (isPlaying) {\r\n        const playPromise = audioRef.current.play();\r\n        if (playPromise !== undefined) {\r\n          playPromise.catch((error) => {\r\n            console.error(\"Auto-play failed:\", error);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  // Handle play/pause button\r\n  const togglePlayPause = () => {\r\n    if (!currentTrack) return;\r\n\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.catch((error) => {\r\n          console.error(\"Play failed:\", error);\r\n        });\r\n      }\r\n    }\r\n\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Track ended handler\r\n  useEffect(() => {\r\n    const handleEnded = () => {\r\n      setIsPlaying(false);\r\n      if (onTrackEnd) onTrackEnd();\r\n    };\r\n\r\n    const audio = audioRef.current;\r\n    audio.addEventListener(\"ended\", handleEnded);\r\n\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [onTrackEnd]);\r\n\r\n  return (\r\n    <div className=\"music-player\">\r\n      <h2>Now Playing: {currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"}</h2>\r\n      <button onClick={togglePlayPause} disabled={!currentTrack}>\r\n        {isPlaying ? \"Pause\" : \"Play\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}