{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2025\\\\March\\\\BHT_Sravanth_t6565 (Music)\\\\music-player\\\\frontend\\\\src\\\\components\\\\MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/MusicPlayer.css\"; // Add custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  currentTrack,\n  onTrackEnd,\n  audioRef\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Handle track change\n  useEffect(() => {\n    if (currentTrack) {\n      audioRef.current.src = currentTrack.s3_url;\n      audioRef.current.load();\n      if (isPlaying) {\n        const playPromise = audioRef.current.play();\n        if (playPromise !== undefined) {\n          playPromise.catch(error => {\n            console.error(\"Auto-play failed:\", error);\n          });\n        }\n      }\n    }\n  }, [currentTrack]);\n\n  // Handle play/pause button\n  const togglePlayPause = () => {\n    if (!currentTrack) return;\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n          console.error(\"Play failed:\", error);\n        });\n      }\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Track ended handler\n  useEffect(() => {\n    const handleEnded = () => {\n      setIsPlaying(false);\n      if (onTrackEnd) onTrackEnd();\n    };\n    const audio = audioRef.current;\n    audio.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audio.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [onTrackEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      disabled: !currentTrack,\n      children: isPlaying ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"fXAELlDlOxHwQE3qVmptCmPKGNo=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MusicPlayer","currentTrack","onTrackEnd","audioRef","_s","isPlaying","setIsPlaying","current","src","s3_url","load","playPromise","play","undefined","catch","error","console","togglePlayPause","pause","handleEnded","audio","addEventListener","removeEventListener","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/2025/March/BHT_Sravanth_t6565 (Music)/music-player/frontend/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../styles/MusicPlayer.css\"; // Add custom styles\r\n\r\nconst MusicPlayer = ({ currentTrack, onTrackEnd, audioRef }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  // Handle track change\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      audioRef.current.src = currentTrack.s3_url;\r\n      audioRef.current.load();\r\n\r\n      if (isPlaying) {\r\n        const playPromise = audioRef.current.play();\r\n        if (playPromise !== undefined) {\r\n          playPromise.catch((error) => {\r\n            console.error(\"Auto-play failed:\", error);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  // Handle play/pause button\r\n  const togglePlayPause = () => {\r\n    if (!currentTrack) return;\r\n\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      const playPromise = audioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise.catch((error) => {\r\n          console.error(\"Play failed:\", error);\r\n        });\r\n      }\r\n    }\r\n\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Track ended handler\r\n  useEffect(() => {\r\n    const handleEnded = () => {\r\n      setIsPlaying(false);\r\n      if (onTrackEnd) onTrackEnd();\r\n    };\r\n\r\n    const audio = audioRef.current;\r\n    audio.addEventListener(\"ended\", handleEnded);\r\n\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [onTrackEnd]);\r\n\r\n  return (\r\n    <div className=\"music-player\">\r\n      <button onClick={togglePlayPause} disabled={!currentTrack}>\r\n        {isPlaying ? \"Pause\" : \"Play\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIK,YAAY,EAAE;MAChBE,QAAQ,CAACI,OAAO,CAACC,GAAG,GAAGP,YAAY,CAACQ,MAAM;MAC1CN,QAAQ,CAACI,OAAO,CAACG,IAAI,CAAC,CAAC;MAEvB,IAAIL,SAAS,EAAE;QACb,MAAMM,WAAW,GAAGR,QAAQ,CAACI,OAAO,CAACK,IAAI,CAAC,CAAC;QAC3C,IAAID,WAAW,KAAKE,SAAS,EAAE;UAC7BF,WAAW,CAACG,KAAK,CAAEC,KAAK,IAAK;YAC3BC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UAC3C,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC,EAAE,CAACd,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMgB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAChB,YAAY,EAAE;IAEnB,IAAII,SAAS,EAAE;MACbF,QAAQ,CAACI,OAAO,CAACW,KAAK,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL,MAAMP,WAAW,GAAGR,QAAQ,CAACI,OAAO,CAACK,IAAI,CAAC,CAAC;MAC3C,IAAID,WAAW,KAAKE,SAAS,EAAE;QAC7BF,WAAW,CAACG,KAAK,CAAEC,KAAK,IAAK;UAC3BC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACtC,CAAC,CAAC;MACJ;IACF;IAEAT,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACd,MAAMuB,WAAW,GAAGA,CAAA,KAAM;MACxBb,YAAY,CAAC,KAAK,CAAC;MACnB,IAAIJ,UAAU,EAAEA,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED,MAAMkB,KAAK,GAAGjB,QAAQ,CAACI,OAAO;IAC9Ba,KAAK,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAE5C,OAAO,MAAM;MACXC,KAAK,CAACE,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAKwB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BzB,OAAA;MAAQ0B,OAAO,EAAER,eAAgB;MAACS,QAAQ,EAAE,CAACzB,YAAa;MAAAuB,QAAA,EACvDnB,SAAS,GAAG,OAAO,GAAG;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DIJ,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}