{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2025\\\\March\\\\BHT_Sravanth_t6565 (Music)\\\\music-player\\\\frontend\\\\src\\\\components\\\\MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPlayer = ({\n  currentTrack,\n  onTrackEnd,\n  audioRef,\n  setIsPlaying\n}) => {\n  _s();\n  const [isLocalPlaying, setLocalPlaying] = useState(false);\n  const localAudioRef = audioRef || useRef(new Audio());\n  useEffect(() => {\n    if (currentTrack) {\n      localAudioRef.current.src = currentTrack.s3_url;\n      localAudioRef.current.load();\n      const playPromise = localAudioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setLocalPlaying(true);\n          setIsPlaying && setIsPlaying(true);\n        }).catch(error => {\n          console.error(\"Auto-play failed:\", error);\n        });\n      }\n    }\n  }, [currentTrack]);\n  useEffect(() => {\n    const handleEnded = () => {\n      setLocalPlaying(false);\n      setIsPlaying && setIsPlaying(false);\n      onTrackEnd && onTrackEnd();\n    };\n    const audio = localAudioRef.current;\n    audio.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audio.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [onTrackEnd, setIsPlaying]);\n  const togglePlayPause = () => {\n    if (!currentTrack) return;\n    if (isLocalPlaying) {\n      localAudioRef.current.pause();\n    } else {\n      localAudioRef.current.play().catch(err => console.error(err));\n    }\n    setLocalPlaying(!isLocalPlaying);\n    setIsPlaying && setIsPlaying(!isLocalPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"20px\",\n        color: \"#fff\"\n      },\n      children: [\"Now Playing: \", currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"10px\",\n        backgroundColor: \"#4db8ff\",\n        color: \"white\",\n        padding: \"8px 16px\",\n        border: \"none\",\n        fontSize: \"14px\",\n        borderRadius: \"6px\",\n        cursor: \"pointer\"\n      },\n      onClick: togglePlayPause,\n      disabled: !currentTrack,\n      children: isLocalPlaying ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicPlayer, \"XwhPV+tqgy8980suhvgs9RZcAz8=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MusicPlayer","currentTrack","onTrackEnd","audioRef","setIsPlaying","_s","isLocalPlaying","setLocalPlaying","localAudioRef","Audio","current","src","s3_url","load","playPromise","play","undefined","then","catch","error","console","handleEnded","audio","addEventListener","removeEventListener","togglePlayPause","pause","err","className","children","style","marginTop","color","title","artist","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","padding","border","fontSize","borderRadius","cursor","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/2025/March/BHT_Sravanth_t6565 (Music)/music-player/frontend/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst MusicPlayer = ({ currentTrack, onTrackEnd, audioRef, setIsPlaying }) => {\r\n  const [isLocalPlaying, setLocalPlaying] = useState(false);\r\n  const localAudioRef = audioRef || useRef(new Audio());\r\n\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      localAudioRef.current.src = currentTrack.s3_url;\r\n      localAudioRef.current.load();\r\n\r\n      const playPromise = localAudioRef.current.play();\r\n      if (playPromise !== undefined) {\r\n        playPromise\r\n          .then(() => {\r\n            setLocalPlaying(true);\r\n            setIsPlaying && setIsPlaying(true);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Auto-play failed:\", error);\r\n          });\r\n      }\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  useEffect(() => {\r\n    const handleEnded = () => {\r\n      setLocalPlaying(false);\r\n      setIsPlaying && setIsPlaying(false);\r\n      onTrackEnd && onTrackEnd();\r\n    };\r\n\r\n    const audio = localAudioRef.current;\r\n    audio.addEventListener(\"ended\", handleEnded);\r\n\r\n    return () => {\r\n      audio.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [onTrackEnd, setIsPlaying]);\r\n\r\n  const togglePlayPause = () => {\r\n    if (!currentTrack) return;\r\n\r\n    if (isLocalPlaying) {\r\n      localAudioRef.current.pause();\r\n    } else {\r\n      localAudioRef.current.play().catch((err) => console.error(err));\r\n    }\r\n\r\n    setLocalPlaying(!isLocalPlaying);\r\n    setIsPlaying && setIsPlaying(!isLocalPlaying);\r\n  };\r\n\r\n  return (\r\n    <div className=\"music-player\">\r\n      <h2 style={{ marginTop: \"20px\", color: \"#fff\" }}>\r\n        Now Playing: {currentTrack ? `${currentTrack.title} by ${currentTrack.artist}` : \"Nothing selected\"}\r\n      </h2>\r\n      <button\r\n        style={{\r\n          marginTop: \"10px\",\r\n          backgroundColor: \"#4db8ff\",\r\n          color: \"white\",\r\n          padding: \"8px 16px\",\r\n          border: \"none\",\r\n          fontSize: \"14px\",\r\n          borderRadius: \"6px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n        onClick={togglePlayPause}\r\n        disabled={!currentTrack}\r\n      >\r\n        {isLocalPlaying ? \"Pause\" : \"Play\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}