{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\2025\\\\March\\\\BHT_Sravanth_t6565 (Music)\\\\music-player\\\\frontend\\\\src\\\\pages\\\\LibraryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../services/api\"; // ✅ Use shared Axios instance\nimport MusicList from \"../components/MusicList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LibraryPage = () => {\n  _s();\n  const [libraryTracks, setLibraryTracks] = useState([]);\n\n  // Fetch user's library from the backend\n  useEffect(() => {\n    const fetchLibrary = async () => {\n      try {\n        const response = await api.get(\"/library\"); // ✅ simplified with baseURL\n        setLibraryTracks(response.data);\n      } catch (error) {\n        console.error(\"Error fetching library:\", error);\n      }\n    };\n    fetchLibrary();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MusicList, {\n      musicTracks: libraryTracks,\n      onSelectTrack: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(LibraryPage, \"VpK2SlvAqLlycXOhwQtyyE2KC38=\");\n_c = LibraryPage;\nexport default LibraryPage;\nvar _c;\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"names":["React","useState","useEffect","api","MusicList","jsxDEV","_jsxDEV","LibraryPage","_s","libraryTracks","setLibraryTracks","fetchLibrary","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","musicTracks","onSelectTrack","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/2025/March/BHT_Sravanth_t6565 (Music)/music-player/frontend/src/pages/LibraryPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport api from \"../services/api\"; // ✅ Use shared Axios instance\r\nimport MusicList from \"../components/MusicList\";\r\n\r\nconst LibraryPage = () => {\r\n  const [libraryTracks, setLibraryTracks] = useState([]);\r\n\r\n  // Fetch user's library from the backend\r\n  useEffect(() => {\r\n    const fetchLibrary = async () => {\r\n      try {\r\n        const response = await api.get(\"/library\"); // ✅ simplified with baseURL\r\n        setLibraryTracks(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching library:\", error);\r\n      }\r\n    };\r\n    fetchLibrary();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"library-page\">\r\n      <h1>My Library</h1>\r\n      <MusicList musicTracks={libraryTracks} onSelectTrack={() => {}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibraryPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5CH,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA,CAACF,SAAS;MAACmB,WAAW,EAAEd,aAAc;MAACe,aAAa,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}